# Generated by Django 4.1.7 on 2023-03-01 09:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hashid_field.field
import imagekit.models.fields
import pixellemonade.core.models.photo
import pixellemonade.core.models.photo_tag
import pixellemonade.core.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', hashid_field.field.BigHashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', auto_created=True, min_length=13, prefix='', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512)),
                ('created_on', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlbumGroup',
            fields=[
                ('id', hashid_field.field.BigHashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', auto_created=True, min_length=13, prefix='', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, unique=True)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Uploader',
            fields=[
                ('id', hashid_field.field.BigHashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', auto_created=True, min_length=13, prefix='', primary_key=True, serialize=False, verbose_name='ID')),
                ('instagram_profile', models.URLField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('flickr_profile', models.URLField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('profile_description', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PhotoTag',
            fields=[
                ('id', hashid_field.field.BigHashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', auto_created=True, min_length=13, prefix='', primary_key=True, serialize=False, verbose_name='ID')),
                ('name', pixellemonade.core.models.photo_tag.LowerCaseField(db_index=True, max_length=128, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', hashid_field.field.BigHashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', auto_created=True, min_length=13, prefix='', primary_key=True, serialize=False, verbose_name='ID')),
                ('image_hash', models.CharField(max_length=64, unique=True)),
                ('original_image', models.ImageField(height_field='original_image_height', storage=pixellemonade.core.storages.PrivateStorage(), upload_to=pixellemonade.core.models.photo.get_path, width_field='original_image_width')),
                ('original_image_height', models.PositiveIntegerField(blank=True, null=True)),
                ('original_image_width', models.PositiveIntegerField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('exif_shot_date_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('exif_json', models.JSONField(null=True)),
                ('small_thumbnail_height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('small_thumbnail_width', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('small_thumbnail', imagekit.models.fields.ProcessedImageField(height_field='small_thumbnail_height', null=True, storage=pixellemonade.core.storages.PublicStorage(), upload_to=pixellemonade.core.models.photo.get_small_thumbs_path, width_field='small_thumbnail_width')),
                ('medium_thumbnail_height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('medium_thumbnail_width', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('medium_thumbnail', imagekit.models.fields.ProcessedImageField(height_field='medium_thumbnail_height', null=True, storage=pixellemonade.core.storages.PublicStorage(), upload_to=pixellemonade.core.models.photo.get_medium_thumbs_path, width_field='medium_thumbnail_width')),
                ('big_thumbnail_height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('big_thumbnail_width', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('big_thumbnail', imagekit.models.fields.ProcessedImageField(height_field='big_thumbnail_height', null=True, storage=pixellemonade.core.storages.PublicStorage(), upload_to=pixellemonade.core.models.photo.get_big_thumbs_path, width_field='big_thumbnail_width')),
                ('in_album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.album')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(to='core.phototag')),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='groups',
            field=models.ManyToManyField(blank=True, null=True, to='core.albumgroup'),
        ),
    ]
